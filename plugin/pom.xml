<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>co.elastic.apm</groupId>
  <artifactId>plugin</artifactId>
  <version>0.0.3-SNAPSHOT</version>

  <properties>
    <version.elastic-agent>1.38.0</version.elastic-agent>
  </properties>

  <dependencies>
    <!-- The Elastic APM Java Agent Plugin SDK is needed to add instrumentation -->
    <dependency>
        <groupId>co.elastic.apm</groupId>
        <artifactId>apm-agent-plugin-sdk</artifactId>
        <version>${version.elastic-agent}</version>
        <scope>provided</scope>
    </dependency>
	<!-- OpenTelemetry provides the standard API used for adding spans, etc -->
	<dependency>
	    <groupId>io.opentelemetry</groupId>
	    <artifactId>opentelemetry-api</artifactId>
	    <version>1.25.0</version>
	</dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-core</artifactId>
      <version>1.9.0</version>
      <exclusions>
        <exclusion>
          <groupId>org.hdrhistogram</groupId>
          <artifactId>HdrHistogram</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- Testing using JUnit -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>5.8.2</version>
      <scope>test</scope>
    </dependency>
    <!-- Testing uses the Elastic APM Java Agent -->
    <dependency>
      <groupId>co.elastic.apm</groupId>
      <artifactId>apm-agent-attach</artifactId>
      <version>${version.elastic-agent}</version>
      <scope>test</scope>
    </dependency>
    <!-- The neighbouring application project is what is being tested -->
    <dependency>
      <groupId>co.elastic.apm</groupId>
      <artifactId>application</artifactId>
      <version>0.0.3-SNAPSHOT</version>
      <scope>test</scope>
    </dependency>
    <!-- The mock APM server provides JSON structured information -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.13.2.2</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <!-- any other plugins -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.0</version>
      </plugin>
      <!-- Tests *IT.java will be executed AFTER the jar is created - this is necessary -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.22.0</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Should maintain 1.8 compatibility
       but this uses HttpClient which is JDK 11+ -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.10.1</version>
        <configuration>
          <source>11</source>
          <target>11</target>
        </configuration>
      </plugin>
      <!-- Needed for the agent plugin: one jar only which includes all dependencies -->
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.0.2</version>
        <executions>
          <execution>
            <id>default-jar</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptorRefs>
                <descriptorRef>jar-with-dependencies</descriptorRef>
              </descriptorRefs>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
